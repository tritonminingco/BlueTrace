name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: bluetrace
          POSTGRES_PASSWORD: bluetrace
          POSTGRES_DB: bluetrace_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('backend/pyproject.toml') }}
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction
    
    - name: Run linters
      working-directory: ./backend
      run: |
        poetry run ruff check app tests
        poetry run black --check app tests
        poetry run mypy app || true
    
    - name: Run tests
      working-directory: ./backend
      env:
        POSTGRES_DSN: postgresql://bluetrace:bluetrace@localhost:5432/bluetrace_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        poetry run pytest --cov=app --cov-report=xml --cov-report=term
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: false

  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: docs/package.json
    
    - name: Install dependencies
      working-directory: ./docs
      run: npm ci
    
    - name: Build docs
      working-directory: ./docs
      run: npm run build

