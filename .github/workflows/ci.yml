name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: bluetrace
          POSTGRES_PASSWORD: bluetrace
          POSTGRES_DB: bluetrace
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: backend/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      working-directory: backend
      run: poetry install --no-interaction --no-root
      
    - name: Install project
      working-directory: backend
      run: poetry install --no-interaction
      
    - name: Run linting
      working-directory: backend
      run: |
        poetry run black --check app/ tests/
        poetry run ruff check app/ tests/ --fix
        poetry run mypy app/
        
    - name: Run tests
      working-directory: backend
      env:
        POSTGRES_DSN: postgresql://bluetrace:bluetrace@localhost:5432/bluetrace
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key
        API_KEY_SALT: test-salt
      run: poetry run pytest --cov=app --cov-report=xml --cov-fail-under=90
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: docs/package-lock.json
        
    - name: Install dependencies
      working-directory: docs
      run: npm ci
      
    - name: Build documentation
      working-directory: docs
      run: npm run build
      
    - name: Run linting
      working-directory: docs
      run: npm run lint